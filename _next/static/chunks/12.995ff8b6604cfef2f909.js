(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{l1DX:function(e,t,n){"use strict";n.r(t);var r=n("hDBU"),a=n("mXGw"),u=n.n(a),o=u.a.createContext(),l=u.a.createContext();function c(e){var t=e.children,n=u.a.useState(0),a=Object(r.default)(n,2),c=a[0],i=a[1];return u.a.createElement(o.Provider,{value:c},u.a.createElement(l.Provider,{value:i},t))}var i=n("Ai+V"),d=u.a.memo(function(){var e=function(){var e=u.a.useContext(o);if("undefined"===typeof e)throw new Error("useCountState must be used within a CountProvider");return e}();return u.a.createElement("div",{style:{border:"1px solid black",padding:10}},u.a.createElement(i.a,null),"The current count is ".concat(e,". "))}),s=u.a.memo(function(){var e=function(){var e=u.a.useContext(l);if("undefined"===typeof e)throw new Error("useCountUpdater must be used within a CountProvider");return u.a.useCallback(function(){return e(function(e){return e+1})},[e])}();return u.a.createElement("div",{style:{border:"1px solid black",padding:10}},u.a.createElement(i.a,null),u.a.createElement("button",{type:"button",onClick:e},"Increment count"))});t.default=function(){var e=u.a.useState(),t=Object(r.default)(e,2)[1];return u.a.createElement("div",{style:{border:"1px solid black",padding:10}},u.a.createElement(i.a,null),u.a.createElement("button",{type:"button",onClick:function(){return t({})}},"force render"),u.a.createElement(c,null,u.a.createElement(d,null),u.a.createElement(s,null)))}}}]);