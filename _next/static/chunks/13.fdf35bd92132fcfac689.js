(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{rgdJ:function(e,t,n){"use strict";n.r(t);var r=n("hDBU"),a=n("mXGw"),c=n.n(a),u=c.a.createContext(),o=c.a.createContext();function i(e,t){switch(t.type){case"increment":return{count:e.count+1};case"decrement":return{count:e.count-1};default:throw new Error("Unhandled action type: ".concat(t.type))}}function l(e){var t=e.children,n=c.a.useReducer(i,{count:0}),a=Object(r.default)(n,2),l=a[0],d=a[1];return c.a.createElement(u.Provider,{value:l},c.a.createElement(o.Provider,{value:d},t))}function d(){var e=c.a.useContext(u);if(void 0===e)throw new Error("useCountState must be used within a CountProvider");return e}function m(){var e=c.a.useContext(o);if(void 0===e)throw new Error("useCountDispatch must be used within a CountProvider");return{dispatch:e,increment:function(){return e({type:"increment"})},decrement:function(){return e({type:"decrement"})}}}var s=n("Ai+V"),p=c.a.memo(function(){var e=d().count;return c.a.createElement("div",{style:{border:"1px solid black",padding:10}},c.a.createElement(s.a,null),"The current count is ".concat(e,". "))}),f=c.a.memo(function(){var e=m(),t=e.dispatch,n=e.increment;return c.a.createElement("div",{style:{border:"1px solid black",padding:10}},c.a.createElement(s.a,null),c.a.createElement("button",{type:"button",onClick:n},"Increment count"),c.a.createElement("button",{type:"button",onClick:function(){return t({type:"decrement"})}},"Decrement count"))});t.default=function(){var e=c.a.useState(),t=Object(r.default)(e,2)[1];return c.a.createElement("div",{style:{border:"1px solid black",padding:10}},c.a.createElement(s.a,null),c.a.createElement("button",{type:"button",onClick:function(){return t({})}},"force render"),c.a.createElement(l,null,c.a.createElement(p,null),c.a.createElement(f,null)))}}}]);